{"version":3,"file":"client-main.js","sources":["/home/ya_myn/dev/practice/fusion/fusion-simple-app/src/components/root.js","/home/ya_myn/dev/practice/fusion/fusion-simple-app/src/main.js","/home/ya_myn/dev/practice/fusion/fusion-simple-app/src/plugins/todos.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-fetch';\nimport { Helmet } from 'fusion-plugin-react-helmet-async';\n\nconst Root = () => {\n    const [todos, setTodos] = useState([]);\n    const [inputText, setInputText] = useState('');\n\n    useEffect(() => {\n        fetch('/api/todos')\n            .then(async res => await res.json())\n            .then(res => setTodos(res));\n    }, []);\n\n    const handleOnKeydown = e => {\n        if (e.key === 'Enter') {\n            setInputText('');\n            setTodos([...todos, inputText]);\n        }\n\n        fetch('/api/todos', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ value: inputText }),\n        });\n    };\n\n    const handleOnChange = e => {\n        setInputText(e.currentTarget.value);\n    };\n\n    return (\n        <React.Fragment>\n            <Helmet>\n                <style>\n                    {`\n        body {\n          background-color: #f5f5f5;\n          font: 24px 'Helvetica Neue', Helvetica, Arial, sans-serif;\n        }\n        h1 {\n          color: rgba(175, 47, 47, 0.15);\n          font-size: 100px;\n          font-weight: 100;\n          text-align: center;\n        }\n        .container {\n          background: #ffffff;\n          border: 1px solid #ededed;\n          margin: 0 auto;\n          width: 550px;\n        }\n        input {\n          border: none;\n          font-size: 24px;\n          font-weight: 300;\n          padding: 15px;\n          width: 520px;\n        }\n        input::placeholder {\n          color: #e6e6e6;\n          font-style: italic;\n          font-weight: 100;\n        }\n        .todo {\n          border-top: 1px solid #ededed;\n          padding: 15px;\n        }\n        .todo-text {\n          font-weight: 300;\n        }\n      `}\n                </style>\n            </Helmet>\n            <h1>todos</h1>\n            <div className=\"container\">\n                <input\n                    onChange={handleOnChange}\n                    onKeyDown={handleOnKeydown}\n                    placeholder=\"What needs to be done?\"\n                    value={inputText}\n                    type=\"text\"\n                />\n                {todos.map(todo => (\n                    <div className=\"todo\">\n                        <div className=\"todo-text\">{todo}</div>\n                    </div>\n                ))}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default <Root />;\n","import App from 'fusion-react';\nimport Root from './components/root';\nimport TodosPlugin from './plugins/todos';\nimport HelmetPlugin from 'fusion-plugin-react-helmet-async';\n\nexport default async function start() {\n    const app = new App(Root);\n    if (__NODE__) {\n        app.middleware(require('koa-bodyparser')());\n        app.middleware(TodosPlugin);\n    }\n    app.register(HelmetPlugin);\n    return app;\n}\n","const todos = ['Buy milk', 'Walk dog'];\n\nexport default async (ctx, next) => {\n    if (ctx.path === '/api/todos') {\n        if (ctx.method === 'GET') {\n            ctx.response.body = todos;\n        } else if (ctx.method === 'POST') {\n            const { value } = ctx.request.body;\n            todos.push(value);\n            ctx.response.status = 201;\n        }\n    }\n    await next();\n};\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AC/FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA,eAGA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;A","sourceRoot":""}